apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -o chart
    kompose.service.expose: pixelfed.k3s.local
    kompose.service.expose.ingress-class-name: nginx
    kompose.version: 1.29.0 (b6b708b6)
    kompose.volume.size: 10G
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app

spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -o chart
        kompose.service.expose: pixelfed.k3s.local
        kompose.service.expose.ingress-class-name: nginx
        kompose.version: 1.29.0 (b6b708b6)
        kompose.volume.size: 10G
      creationTimestamp: null
      labels:
        io.kompose.network/pixelfed-external: "true"
        io.kompose.network/pixelfed-internal: "true"
        io.kompose.service: app
    spec:
      initContainers:
        - name: init-wait
          image: alpine
          command:
            - sh
            - -c
            - "for i in $(seq 1 300); do nc -zvw1 db 3306 && exit 0 || sleep 3; done; exit 1"
      containers:
        - image: registry:5000/pixelfed
          name: app
          envFrom:
            - configMapRef:
                name: pixelfed-env
          ports:
            - containerPort: 80
              hostPort: 8080
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/www/storage
              name: app-storage
            - mountPath: /etc/ssl/certs
              name: k3s-bundle
      restartPolicy: Always
      volumes:
        - name: app-storage
          persistentVolumeClaim:
            claimName: app-storage
        - name: k3s-bundle
          configMap:
            name: k3s-bundle

status: {}
